{"version":3,"sources":["Message.js","firebase.js","App.js","reportWebVitals.js","index.js"],"names":["Message","forwardRef","ref","username","message","isUser","className","Card","CardContent","Typography","color","variant","component","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","useState","input","setInput","messages","setMessages","setUsername","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","prompt","console","log","src","style","width","FormControl","Input","placeholder","value","onChange","event","target","IconButton","type","disabled","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAwBeA,EApBCC,sBAAW,WAAsBC,GAAQ,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,QAE7BC,EAASF,IAAaC,EAAQD,SAEpC,OACI,qBAAKD,IAAKA,EAAKI,UAAS,kBAAaD,GAAU,iBAA/C,SACG,cAACE,EAAA,EAAD,CAAMD,UAAWD,EAAS,oBAAsB,qBAAhD,SACK,cAACG,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAYC,MAAM,QAAQC,QAAQ,KAAKC,UAAU,KAAjD,WACGP,GAAD,UAAcD,EAAQD,UAAY,eAAlC,MADF,IACyDC,EAAQA,oB,QCF/ES,EATcC,IAASC,cAAc,CACvCC,OAAQ,0CACRC,WAAY,iDACZC,UAAW,iCACXC,cAAe,6CACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAEIC,Y,iCC8ERC,MA9Ef,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAU,IAA1C,mBAAOG,EAAP,KAAiBC,EAAjB,KAGA,EAAgCJ,mBAAS,IAAzC,mBAAOtB,EAAP,KAAiB2B,EAAjB,KAqCA,OAjCAC,qBAAU,WACTlB,EAAGmB,WAAW,WAAWC,QAAQ,YAAY,QAAQC,YAAW,SAAAC,GAC9DN,EAAYM,EAASC,KAAKC,KAAI,SAAAC,GAAG,MAAK,CACpCC,GAAID,EAAIC,GACRnC,QAASkC,EAAIE,iBAShB,IACFT,qBAAU,kBAETD,EAAYW,OAAO,6BACnB,IACDC,QAAQC,IAAIjB,GACZgB,QAAQC,IAAIf,GAeV,sBAAKtB,UAAU,MAAf,UACE,qBAAKsC,IAAI,mPAAmPC,MAAO,CAACC,MAAO,UAC5Q,wCAAW3C,EAAX,mBACA,sBAAMG,UAAU,YAAhB,SACK,eAACyC,EAAA,EAAD,CAAazC,UAAU,YAAvB,UAEI,cAAC0C,EAAA,EAAD,CAAOC,YAAY,iCAAuB3C,UAAU,aAAa4C,MAAOxB,EAAOyB,SAAU,SAAAC,GAAK,OAAGzB,EAASyB,EAAMC,OAAOH,UAEvH,cAACI,EAAA,EAAD,CAAYhD,UAAU,kBAAkBiD,KAAK,SAAS7C,MAAM,UAAUC,QAAQ,YAAY6C,UAAW9B,EAAO+B,QArBpG,SAACL,GACnBA,EAAMM,iBAER7C,EAAGmB,WAAW,WAAW2B,IAAI,CAC3BvD,QAASsB,EACTvB,SAAUA,EACVyD,UAAW9C,IAASS,UAAUsC,WAAWC,oBAI3CnC,EAAS,KAWG,SACE,cAAC,IAAD,WAQX,cAAC,IAAD,UAEKC,EAASS,KAAI,gBAAEE,EAAF,EAAEA,GAAInC,EAAN,EAAMA,QAAN,OAET,aADF,CACG,EAAD,CAAkBD,SAAUA,EAAUC,QAASA,GAAjCmC,YC/DbwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7e2ac551.chunk.js","sourcesContent":["import React, {forwardRef} from 'react'\r\nimport {Card, CardContent, Typography} from '@material-ui/core'\r\nimport './Message.css'\r\n\r\nconst Message = forwardRef(({username, message}, ref) =>{\r\n\r\n    const isUser = username === message.username ;\r\n\r\n    return (\r\n        <div ref={ref} className={`message ${isUser && 'message__user'}`}>\r\n           <Card className={isUser ? \"message__userCard\" : \"message__guestCard\"}>\r\n                <CardContent>\r\n                    <Typography color=\"white\" variant=\"h5\" component=\"h2\">\r\n                     {!isUser && `${message.username || 'Unknown User'}: `} {message.message}\r\n                    </Typography>\r\n                </CardContent>\r\n\r\n           </Card>   \r\n            {/* <h2>{props.username} : {props.text}</h2> */}\r\n        </div>\r\n    )\r\n}\r\n)\r\n\r\nexport default Message\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyAZmPvRr6OlGi16GL7K1q5mNpt0zzGWRmU\",\r\n    authDomain: \"facebook-messenger-clone-c41a6.firebaseapp.com\",\r\n    projectId: \"facebook-messenger-clone-c41a6\",\r\n    storageBucket: \"facebook-messenger-clone-c41a6.appspot.com\",\r\n    messagingSenderId: \"241608900969\",\r\n    appId: \"1:241608900969:web:96ae748998b567c062bdf8\",\r\n    measurementId: \"G-2RSCRWRN80\"\r\n});\r\nconst db = firebaseApp.firestore();\r\n//export default db;\r\nexport {db};","import './App.css';\nimport {useState, useEffect} from 'react';\nimport {Button, FormControl, InputLabel, Input} from '@material-ui/core';\nimport Message from './Message';\n// import {Button} from '@material-ui/core'\nimport {db} from './firebase';\nimport firebase from 'firebase';\nimport FlipMove from 'react-flip-move'\nimport { width } from '@material-ui/system';\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core'; \nfunction App() {\n  const [input, setInput] = useState(''); // to Take The Message From The input Faild\n  const [messages, setMessages] = useState ([ ]);    // This To Save Our Messsage via input\n\n  \n  const [username, setUsername] = useState([]);\n  // useState = variable in React\n  // useEffect = run code on a condition in React\n\n  useEffect(()=>{\n   db.collection('message').orderBy('timestamp','desc').onSnapshot(snapshot => {\n     setMessages(snapshot.docs.map(doc => ({\n       id: doc.id,\n       message: doc.data()\n     })\n    //   (\n    //  {\n    //     username: doc.data().username,\n    //     messages: doc.data().message\n    // } )\n    ))\n   });\n  },[])\n  useEffect(()=>\n   // const username = prompt('Please Enter User Name');\n   setUsername(prompt('Please Enter User Name'))\n  ,[])\n  console.log(input);\n  console.log(messages)\n  // Our Function Which will take the message From input faild\n  const sentMessage = (event) =>{\n    event.preventDefault();\n  //setMessages([...messages, input]); \n  db.collection('message').add({\n    message: input,\n    username: username,\n    timestamp: firebase.firestore.FieldValue.serverTimestamp()\n  })\n  //   setMessages([...messages, {username:username , text:input}])\n  //   { messages State: username State , messages State: input State }\n  setInput('');  \n}\n  return (\n    <div className=\"App\">\n      <img src=\"https://scontent.ffjr1-1.fna.fbcdn.net/v/t39.8562-6/120009688_325579128711709_1736249742330805861_n.png?_nc_cat=1&ccb=1-3&_nc_sid=6825c5&_nc_ohc=gIwj0DXAMnMAX-o8hFP&_nc_ht=scontent.ffjr1-1.fna&oh=55b4983799c4545e3645a0daf61ae0d3&oe=60C0937D\" style={{width: '70px' }}/>\n     <h2>Hello {username} ðŸ‘€</h2>\n     <form className=\"app__form\">\n          <FormControl className=\"app__form\">\n              {/* <InputLabel >ðŸ“©Enter a message...</InputLabel> */}\n              <Input placeholder=\"ðŸ“©Enter a message...\" className=\"app__input\" value={input} onChange={event=> setInput(event.target.value)}/>\n              {/* <Button type='submit' color=\"primary\" variant=\"contained\" disabled={!input} onClick={sentMessage}> Sent Message</Button> */}\n              <IconButton className=\"app__IconButton\" type='submit' color=\"primary\" variant=\"contained\" disabled={!input} onClick={sentMessage}>\n                <SendIcon />\n              </IconButton>\n          </FormControl>\n        {/* //   <input  value={input} onChange={event => setInput(event.target.value)}/> */}\n          \n     </form> \n     \n     {/* To Print The Message On Screen */}\n     <FlipMove>\n       {\n          messages.map(({id, message}) =>(\n            //<Message username={message.username} text={message.text}/>\n              <Message key={id} username={username} message={message} />\n            // <h1>{message}</h1>\n          ))\n       }\n     </FlipMove>\n     \n     {/* input field */}\n     {/* button */}\n\n     {/* message themselves */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}